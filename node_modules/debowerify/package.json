{
  "_args": [
    [
      {
        "raw": "debowerify@^0.7.1",
        "scope": null,
        "escapedName": "debowerify",
        "name": "debowerify",
        "rawSpec": "^0.7.1",
        "spec": ">=0.7.1 <0.8.0",
        "type": "range"
      },
      "E:\\tkppl"
    ]
  ],
  "_from": "debowerify@>=0.7.1 <0.8.0",
  "_id": "debowerify@0.7.1",
  "_inCache": true,
  "_location": "/debowerify",
  "_npmUser": {
    "name": "eugeneware",
    "email": "eugene@noblesamurai.com"
  },
  "_npmVersion": "1.4.3",
  "_phantomChildren": {},
  "_requested": {
    "raw": "debowerify@^0.7.1",
    "scope": null,
    "escapedName": "debowerify",
    "name": "debowerify",
    "rawSpec": "^0.7.1",
    "spec": ">=0.7.1 <0.8.0",
    "type": "range"
  },
  "_requiredBy": [
    "#DEV:/"
  ],
  "_resolved": "https://registry.npmjs.org/debowerify/-/debowerify-0.7.1.tgz",
  "_shasum": "d605520442a7912e6d76545e0cc2c6bb03444445",
  "_shrinkwrap": null,
  "_spec": "debowerify@^0.7.1",
  "_where": "E:\\tkppl",
  "author": {
    "name": "Eugene Ware",
    "email": "eugene@noblesamurai.com"
  },
  "bugs": {
    "url": "https://github.com/eugeneware/debowerify/issues"
  },
  "dependencies": {
    "bower": "~1.2.6",
    "falafel": "~0.3.1",
    "through": "~2.3.4"
  },
  "description": "A browserify transform to enable the easy use of bower components in browserify client javascript projects. This can be used in conjunction with deamdify to require AMD components from bower as well.",
  "devDependencies": {
    "browserify": "~3.32.0",
    "chai": "~1.9.0",
    "deamdify": "~0.1.1",
    "domready": "~1.0.4",
    "mocha": "~1.17.1"
  },
  "directories": {
    "test": "test"
  },
  "dist": {
    "shasum": "d605520442a7912e6d76545e0cc2c6bb03444445",
    "tarball": "https://registry.npmjs.org/debowerify/-/debowerify-0.7.1.tgz"
  },
  "homepage": "https://github.com/eugeneware/debowerify#readme",
  "keywords": [
    "bower",
    "component",
    "components",
    "browserify",
    "transform"
  ],
  "license": "BSD",
  "main": "index.js",
  "maintainers": [
    {
      "name": "nharbour",
      "email": "eugene@noblesamurai.com"
    },
    {
      "name": "eugeneware",
      "email": "eugene@noblesamurai.com"
    }
  ],
  "name": "debowerify",
  "optionalDependencies": {},
  "readme": "# debowerify\n\nA browserify transform to enable the easy use of [bower](https://bower.io) components in browserify client javascript projects.\n\nThis can be used in conjunction with [deamdify](https://github.com/jaredhanson/deamdify) to require AMD components from bower as well.\n\nNB: For more information about how to use debowerify to create stand-alone library bundles\ncheck out [bower-resolve](https://github.com/eugeneware/bower-resolve) and the \nexamples in the README.\n\n[![build status](https://secure.travis-ci.org/eugeneware/debowerify.png)](http://travis-ci.org/eugeneware/debowerify)\n\n## Installation\n\nInstallation is via npm:\n\n```\n$ npm install debowerify\n```\n\n## How to use.\n\nInstall some bower components:\n\n```\n# creates files in components/screenfull/\n$ bower install screenfull\n```\n\nRequire the bower file by it's bower identifier (ie. in this case \"screenfull\"):\n\n``` js\n// public/scripts/app.js\nvar _screenfull = require('screenfull'); // the bower component\nvar domready = require('domready'); // a regular browserify npm component\n\ndomready(function () {\n  var button = document.getElementById('fullscreen');\n  button.addEventListener('click', function (evt) {\n    // screenfull adds itself to window.screenfull - but we can get to it\n    if (screenfull.enabled) {\n      screenfull.toggle(this);\n    }\n  });\n});\n```\n\nBuild out your browserify bundle using the debowerify transform:\n\n```\n$ browserify -t debowerify  public/scripts/app.js -o public/scripts/build/bundle.js\n```\n\nThen include your bundle.js in your HTML file and you're done!\n\n# How to use with AMD components\n\nIf your bower components are amd and they don't support commonjs modules than simply use debowerify with the excellent [deamdify](https://github.com/jaredhanson/deamdify) browserify transform. For example, the following AMD bower import:\n\n```\n# creates files in components/myamdcomponent/\n$ bower install myamdcomponent\n```\n\n``` js\n// public/scripts/amdapp.js\nvar myamdcomponent = require('myamdcomponent'); // the AMD bower component\nvar domready = require('domready'); // a regular browserify npm component\n\ndomready(function () {\n  // call the amd component\n  myamdcomponent.doStuff();\n});\n```\n\nTo make this all magically work and use the short-form bower name of \"amdcomponent\" chain both debowerify and deamdify together like this:\n\n```\n$ browserify -t debowerify -t deamdify public/scripts/amdapp.js -o public/scripts/build/bundle.js\n```\n\nToo easy!\n\n# Notes\n\nThe transform depends on the \"main\" entry in bower.json to be correct.\n\nSome bower components may not have this set, or have it set incorrectly. In this case, either manually update the bower.json file yourself, of just do a require to the relevant full path of the bower javascript file - and then complain to the bower component repo owner! :-)\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/eugeneware/debowerify.git"
  },
  "scripts": {
    "test": "mocha"
  },
  "version": "0.7.1"
}
