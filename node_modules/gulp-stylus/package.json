{
  "_args": [
    [
      {
        "raw": "gulp-stylus@^1.0.2",
        "scope": null,
        "escapedName": "gulp-stylus",
        "name": "gulp-stylus",
        "rawSpec": "^1.0.2",
        "spec": ">=1.0.2 <2.0.0",
        "type": "range"
      },
      "E:\\tkppl"
    ]
  ],
  "_from": "gulp-stylus@>=1.0.2 <2.0.0",
  "_id": "gulp-stylus@1.3.7",
  "_inCache": true,
  "_location": "/gulp-stylus",
  "_npmUser": {
    "name": "stevelacy",
    "email": "me@slacy.me"
  },
  "_npmVersion": "1.4.28",
  "_phantomChildren": {
    "ansi-regex": "2.1.1",
    "array-differ": "1.0.0",
    "array-uniq": "1.0.3",
    "beeper": "1.1.1",
    "buffer-shims": "1.0.0",
    "core-util-is": "1.0.2",
    "dateformat": "2.0.0",
    "escape-string-regexp": "1.0.5",
    "fancy-log": "1.3.0",
    "gulplog": "1.0.0",
    "has-ansi": "2.0.0",
    "has-gulplog": "0.1.0",
    "inherits": "2.0.3",
    "lodash._reescape": "3.0.0",
    "lodash._reevaluate": "3.0.0",
    "lodash._reinterpolate": "3.0.0",
    "lodash.template": "3.6.2",
    "multipipe": "0.1.2",
    "process-nextick-args": "1.0.7",
    "replace-ext": "0.0.1",
    "supports-color": "2.0.0",
    "util-deprecate": "1.0.2",
    "vinyl": "0.5.3",
    "xtend": "4.0.1"
  },
  "_requested": {
    "raw": "gulp-stylus@^1.0.2",
    "scope": null,
    "escapedName": "gulp-stylus",
    "name": "gulp-stylus",
    "rawSpec": "^1.0.2",
    "spec": ">=1.0.2 <2.0.0",
    "type": "range"
  },
  "_requiredBy": [
    "#DEV:/"
  ],
  "_resolved": "https://registry.npmjs.org/gulp-stylus/-/gulp-stylus-1.3.7.tgz",
  "_shasum": "b44526f1733c496f7d34bf6314ed153cdb4419ef",
  "_shrinkwrap": null,
  "_spec": "gulp-stylus@^1.0.2",
  "_where": "E:\\tkppl",
  "author": {
    "name": "Steve Lacy",
    "email": "me@slacy.me",
    "url": "http://slacy.me"
  },
  "bugs": {
    "url": "https://github.com/stevelacy/gulp-stylus/issues"
  },
  "dependencies": {
    "accord": "^0.12.0",
    "gulp-util": "^3.0.1",
    "lodash": "^2.4.1",
    "replace-ext": "0.0.1",
    "stylus": "*",
    "through2": "^0.6.3"
  },
  "description": "Stylus plugin for gulp",
  "devDependencies": {
    "mocha": "*",
    "should": "*"
  },
  "directories": {
    "example": "examples",
    "test": "test"
  },
  "dist": {
    "shasum": "b44526f1733c496f7d34bf6314ed153cdb4419ef",
    "tarball": "https://registry.npmjs.org/gulp-stylus/-/gulp-stylus-1.3.7.tgz"
  },
  "engines": {
    "node": ">= 0.9.0"
  },
  "gitHead": "0b6383ce83cd6091a86d0f93ea1aef081fe93eb6",
  "homepage": "http://github.com/stevelacy/gulp-stylus",
  "keywords": [
    "gulp",
    "stylus",
    "css",
    "preprocessor",
    "gulpplugin",
    "gulp-plugin"
  ],
  "licenses": {
    "type": "MIT",
    "url": "https://github.com/stevelacy/gulp-stylus/raw/master/LICENSE"
  },
  "main": "./index.js",
  "maintainers": [
    {
      "name": "stevelacy",
      "email": "me@slacy.me"
    }
  ],
  "name": "gulp-stylus",
  "optionalDependencies": {},
  "readme": "#gulp-stylus\n[![Build Status](https://travis-ci.org/stevelacy/gulp-stylus.png?branch=master)](https://travis-ci.org/stevelacy/gulp-stylus)\n[![NPM version](https://badge.fury.io/js/gulp-stylus.png)](http://badge.fury.io/js/gulp-stylus)\n\n> Compile [Stylus](http://learnboost.github.io/stylus/) with gulp (gulpjs.com)\n\n## Information\n\n<table>\n<tr>\n<td>Package</td><td>gulp-stylus</td>\n</tr>\n<tr>\n<td>Description</td>\n<td>Stylus plugin for gulp</td>\n</tr>\n<tr>\n<td>Node Version</td>\n<td>>= 0.9</td>\n</tr>\n<tr>\n<td>Gulp Version</td>\n<td>3.x</td>\n</tr>\n</table>\n\n## Usage\n\n#### Install\n\n```sh\n$ npm install --save-dev gulp-stylus\n```\n\n## Examples\n\n```javascript\n\n// include the required packages.\nvar gulp = require('gulp');\nvar stylus = require('gulp-stylus');\n\n// include, if you're going to use nib helper library\nvar nib = require('nib');\n\n// include, if you want to work with sourcemaps\nvar sourcemaps = require('gulp-sourcemaps');\n\n// Get one .styl file and render\ngulp.task('one', function () {\n  gulp.src('./css/one.styl')\n    .pipe(stylus())\n    .pipe(gulp.dest('./css/build'));\n});\n\n// Options\n// Options compress\ngulp.task('compress', function () {\n  gulp.src('./css/compressed.styl')\n    .pipe(stylus({\n      use: nib(),\n      compress: true\n    }))\n    .pipe(gulp.dest('./css/build'));\n});\n\n// Use nib\ngulp.task('nib', function () {\n  gulp.src('./css/nib.styl')\n    .pipe(stylus({use: [nib()]}))\n    .pipe(gulp.dest('./css/build'));\n});\n\n// Set linenos\ngulp.task('linenos', function () {\n  gulp.src('./css/linenos.styl')\n    .pipe(stylus({linenos: true}))\n    .pipe(gulp.dest('./css/build'));\n});\n\n// Inline sourcemaps\ngulp.task('sourcemaps-inline', function () {\n  gulp.src('./css/sourcemaps-inline.styl')\n    .pipe(stylus({\n      sourcemap: {\n        inline: true,\n        sourceRoot: '..',\n        basePath: 'css'\n      }\n    }))\n    .pipe(gulp.dest('./css/build'));\n});\n\n// External sourcemaps\ngulp.task('sourcemaps-external', function () {\n  gulp.src('./css/sourcemaps-external.styl')\n    .pipe(stylus({\n      sourcemap: {\n        inline: true,\n        sourceRoot: '.',\n        basePath: 'css/build'\n      }\n    }))\n    .pipe(sourcemaps.init({\n      loadMaps: true\n    }))\n    .pipe(sourcemaps.write('.', {\n      includeContent: false,\n      sourceRoot: '.'\n    }))\n    .pipe(gulp.dest('./css/build'));\n});\n\n// Default gulp task to run\ngulp.task('default', ['one', 'compress', 'nib', 'linenos', 'sourcemaps-inline', 'sourcemaps-external']);\n\n```\n\n#####You can view more examples in the [example folder.](https://github.com/stevelacy/gulp-stylus/tree/master/examples)\n\n## Options\n#### All stylus options are passed to [accord/stylus](https://github.com/jenius/accord/blob/master/docs/stylus.md)\n\n\n\n## LICENSE [MIT](LICENSE)\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git+ssh://git@github.com/stevelacy/gulp-stylus.git"
  },
  "scripts": {
    "test": "mocha --reporter spec"
  },
  "version": "1.3.7"
}
